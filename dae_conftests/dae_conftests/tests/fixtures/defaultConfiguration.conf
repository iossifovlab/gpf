phenotype_browser = false
phenotype_tool = false

study_type = "WE"
has_transmitted = false
has_complex = false
has_cnv = false

conf_dir = "."

[genotype_browser]
enabled = false
has_cnv = false
has_complex = false
has_family_filters = true
has_study_filters = true
has_present_in_child = true
has_present_in_parent = true
has_pedigree_selector = false
has_graphical_preview = true
selected_genotype_column_values = [
    "family", "phenotype", "variant", "best", "fromparent", "inchild", "genotype",
    "effect", "count", "geneeffect", "effectdetails", "weights", "freq"
]
preview_columns = [
    "family", "variant", "genotype", "effect", "weights", "freq", "studyName",
    "location", "pedigree", "inChS", "fromParentS", "effects",
    "requestedGeneEffects", "genes", "worstEffect"
]
download_columns = [
    "family", "phenotype", "variant", "best", "fromparent", "inchild", "effect",
    "count", "geneeffect", "effectdetails", "weights", "freq"
]

[denovo_gene_sets]
enabled=false
standard_criterias.effect_types.segments = {LGDs = "LGDs", Missense = "missense", "Synonymous" = "synonymous"}
standard_criterias.sexes.segments = {Female = "F", Male = "M", Unspecified = "U"}

recurrency_criteria.segments = {Single = {start = 1, end = 2}, Triple = {start = 3, end = -1}, Recurrent = {start = 2, end = -1}}
gene_sets_names = [
    "LGDs", "LGDs.Male", "LGDs.Female", "LGDs.Recurrent", "LGDs.Single", "LGDs.Triple",
    "LGDs.WE.Recurrent", "LGDs.WE.Triple",
    "Missense", "Missense.Single", "Missense.Male", "Missense.Female",
    "Missense.Recurrent", "Missense.Triple", "Missense.WE.Recurrent", "Missense.WE.Triple",
    "Synonymous", "Synonymous.WE", "Synonymous.WE.Recurrent", "Synonymous.WE.Triple"
]

[people_group]
phenotype.name = "Phenotype"
phenotype.domain = [
    {id = "phenotype1", name = "phenotype 1", color = "#e35252"},
    {id = "phenotype2", name = "phenotype 2", color = "#b8008a"},
    {id = "phenotype3", name = "phenotype 3", color = "#e3d252"},
    {id = "unaffected", name = "unaffected", color = "#ffffff"}
]
phenotype.default = {id = "unknown", name = "unknown", color = "#aaaaaa"}
phenotype.source = "phenotype"

pheno.name = "Pheno"
pheno.domain = [
    {id = "pheno1", name = "pheno 1", color = "#e35252"},
    {id = "pheno2", name = "pheno 2", color = "#b8008a"},
    {id = "pheno3", name = "pheno 3", color = "#e3d252"},
    {id = "unaffected", name = "unaffected", color = "#ffffff"}
]
pheno.default = {id = "unknown", name = "unknown", color = "#aaaaaa"}
pheno.source = "pheno"

[enrichment]
enabled = false
selected_people_groups = ["phenotype"]
selected_background_values = ["synonymousBackgroundModel", "codingLenBackgroundModel", "samochaBackgroundModel"]
background.synonymous_background_model.name = "synonymousBackgroundModel"
background.synonymous_background_model.desc = "Synonymous Background Model"
background.coding_len_background_model.file = "./codingLenBackgroundModel.csv"
background.codingLen_background_model.name = "codingLenBackgroundModel"
background.coding_len_background_model.desc = "Coding Len Background Model"
background.samocha_background_model.file = "./samochaBackgroundModel.csv"
background.samocha_background_model.name = "samochaBackgroundModel"
background.samocha_background_model.desc = "Samocha Background Model"
default_background_model = "codingLenBackgroundModel"
selected_counting_values = ["enrichmentEventsCounting", "enrichmentGeneCounting"]
counting.enrichment_events_counting.name = "enrichmentEventsCounting"
counting.enrichment_events_counting.desc = "Enrichment Events Counting"
counting.enrichment_gene_counting.name = "enrichmentGeneCounting"
counting.enrichment_gene_counting.desc = "Enrichment Gene Counting"
default_counting_model = "enrichmentGeneCounting"
effect_types = ["LGDs", "missense", "synonymous"]
