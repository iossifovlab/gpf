'''
Created on Jun 24, 2015

@author: lubo
'''
import unittest
from api.variants.transmitted_variants import parse_family_data, read_toomany_df,\
    read_summary_df, load_toomany_family_data


class Test(unittest.TestCase):

    @classmethod
    def setUpClass(cls):
        super(Test, cls).setUpClass()
        cls.df = read_summary_df('w1202s766e611')
        cls.tbf = read_toomany_df('w1202s766e611')
        
    def setUp(self):
        pass


    def tearDown(self):
        pass

    FAMILY_DATA = '11067:0000/2222:0 0 0 0/71 38 36 29/0 0 0 0;11084:0000/2222:0 0 1 0/36 35 35 38/0 1 0 0;11107:0000/2222:0 0 2 0/85 32 48 61/1 2 2 1;11352:0000/2222:1 0 0 0/56 30 64 54/0 1 0 0;11484:0000/2222:0 0 0 0/60 26 43 34/1 1 0 0;11881:0000/2222:0 0 0 0/76 35 37 34/2 0 0 0;12240:0000/2222:0 1 0 0/37 29 22 24/1 1 0 0;12274:0000/2222:1 0 1 0/33 34 49 35/0 1 0 0;12317:0000/2222:0 1 1 0/32 44 42 40/0 0 1 3;13204:0000/2222:0 0 0 0/31 47 68 33/0 0 2 0;13720:0000/2222:0 0 0 0/30 58 71 34/0 0 1 0;13747:0000/2222:0 0 0 0/29 30 32 0/0 2 0 0;13750:0000/2222:0 0 1 0/26 29 43 60/0 1 0 2;13800:0000/2222:0 0 1 0/26 73 80 54/0 0 0 0;13842:0000/2222:0 0 0 1/71 69 106 45/1 0 2 0;13867:0000/2222:0 0 0 0/29 37 29 24/0 1 1 0;13874:0000/2222:0 0 0 0/33 42 22 72/0 1 0 0;13882:0000/2222:1 2 0 0/55 35 53 36/0 0 1 0;13962:0000/2222:0 0 0 0/54 38 71 41/2 1 0 0;13973:0000/2222:0 0 0 0/28 59 16 37/0 0 0 1;13975:0000/2222:1 0 0 0/53 28 75 20/1 0 1 1;14042:0000/2222:0 0 0 0/44 41 27 56/0 0 0 0;14260:0000/2222:0 0 0 0/39 25 30 36/0 0 0 0;11001:000/222:0 0 0/55 59 62/0 0 0;11044:000/222:0 0 0/35 46 42/0 0 0;11046:0000/2222:0 1 0 0/37 67 66 68/1 2 1 2;11101:000/222:0 1 0/32 60 38/0 0 0;11131:000/222:0 0 0/65 42 46/0 0 0;11150:0000/2222:0 0 0 0/50 41 67 39/0 0 1 0;11185:000/222:0 0 0/27 36 27/1 0 0;11245:0000/2222:0 0 0 0/39 57 72 59/0 0 0 0;11268:0000/2222:0 1 0 0/34 41 33 36/1 1 0 0;11349:0000/2222:0 0 0 0/47 45 33 43/0 0 0 0;11357:000/222:0 1 0/75 35 32/0 0 0;11359:0000/2222:0 0 0 0/66 95 109 92/0 0 1 1;11374:000/222:0 0 0/49 46 68/0 1 0;11378:0000/2222:0 1 0 0/53 72 41 51/0 0 0 0;11441:0000/2222:0 0 0 0/29 26 48 39/0 0 0 0;11460:000/222:0 0 0/29 41 28/0 0 0;11489:0000/2222:1 0 0 0/30 34 39 33/1 0 0 0;11497:000/222:0 0 0/26 76 55/0 0 0;11620:0000/2222:0 0 0 0/33 29 23 53/0 0 1 0;11633:000/222:1 0 0/83 68 61/0 0 1;11717:0000/2222:0 0 0 0/54 100 40 78/0 0 0 0;11825:000/222:0 0 0/85 72 58/0 0 0;11838:0000/2222:0 0 0 1/41 68 44 67/0 0 0 2;11878:000/222:0 0 0/49 37 38/0 0 0;12021:0000/2222:1 0 0 1/40 45 40 63/0 0 0 1;12028:000/222:0 0 0/41 41 39/0 0 0;12033:0000/2222:0 0 0 0/92 59 77 46/0 0 0 0;12052:0000/2222:0 0 0 0/41 66 37 42/1 0 1 1;12139:000/222:0 0 0/40 35 67/0 0 0;12311:000/222:0 0 0/42 33 37/0 0 0;12472:000/222:1 0 0/63 33 70/1 0 0;12482:000/222:0 0 0/34 30 30/0 0 0;12498:0000/2222:1 0 1 0/71 47 44 57/1 1 1 3;12504:000/222:0 0 0/75 40 45/0 0 0;12510:0000/2222:0 0 0 0/40 39 47 12/0 0 0 0;12597:0000/2222:0 0 0 0/30 65 53 25/0 0 0 0;12614:000/222:0 0 0/41 47 20/1 1 0;12618:0000/2222:0 0 0 0/35 41 37 27/0 0 0 0;12637:0000/2222:0 0 0 0/66 64 74 52/1 2 0 0;12645:0000/2222:0 0 0 0/33 55 46 57/0 0 0 1;12705:0000/2222:0 0 0 0/34 38 34 49/0 0 0 0;12716:0000/2222:0 0 0 1/33 27 26 43/0 1 2 0;12723:0000/2222:1 1 0 0/51 42 58 58/1 0 1 0;12754:000/222:0 0 1/34 38 85/0 0 0;12777:000/222:0 0 0/55 79 80/0 1 0;12778:0000/2222:0 0 1 0/30 30 30 8/0 0 2 1;12796:0000/2222:1 0 0 0/67 33 30 22/2 0 0 1;12827:000/222:0 0 0/35 77 38/0 0 1;12843:0000/2222:0 0 0 0/66 31 28 38/1 0 0 0;12852:0000/2222:0 0 0 1/27 28 64 70/0 0 1 0;12858:0000/2222:0 0 0 0/66 98 87 99/1 1 2 1;12861:0000/2222:0 0 0 0/76 90 80 78/1 0 2 1;12891:0000/2222:0 0 0 0/73 47 26 38/0 1 0 0;12938:0000/2222:1 0 0 0/35 26 56 34/1 0 0 0;12950:0000/2222:0 0 0 0/33 30 40 39/0 0 0 0;12959:000/222:0 0 0/30 25 66/0 0 0;12969:0000/2222:0 0 0 0/75 36 42 75/1 1 0 1;12998:000/222:0 0 1/32 55 53/0 0 0;13005:0000/2222:0 1 0 0/35 66 32 28/0 0 1 0;13066:0000/2222:0 0 1 0/42 39 42 51/0 0 0 2;13085:000/222:0 0 1/42 43 77/0 0 1;13092:0000/2222:0 0 0 0/30 36 15 19/1 0 0 0;13191:0000/2222:0 0 0 0/29 32 19 0/0 0 0 0;13192:000/222:0 0 0/71 46 60/0 0 0;13211:0000/2222:1 1 1 0/53 63 73 51/0 0 0 2;13329:000/222:0 0 1/41 83 47/0 0 0;13334:000/222:0 0 0/25 46 69/0 0 0;13338:0000/2222:0 0 0 0/40 47 29 22/0 0 0 1;13350:000/222:0 0 0/37 37 27/0 0 0;13362:000/222:0 0 0/52 56 43/0 0 0;13366:0000/2222:0 0 0 0/35 31 72 17/0 0 0 1;13377:000/222:0 0 0/47 34 83/0 0 0;13388:000/222:0 0 0/35 29 35/0 0 0;13405:000/222:0 0 0/39 34 40/0 0 0;13417:0000/2222:0 0 0 0/36 30 38 49/0 0 0 0;13418:0000/2222:0 0 0 0/52 37 46 58/0 0 1 0;13425:000/222:1 0 0/81 69 62/0 0 0;13505:0000/2222:0 0 1 0/44 63 62 29/0 0 0 0;13527:000/222:0 0 0/70 26 37/0 0 0;13601:0000/2222:3 0 0 0/54 30 33 30/1 0 1 1;13617:0000/2222:1 0 0 0/43 34 31 42/1 1 0 0;13619:0000/2222:0 0 0 0/63 39 16 47/2 0 0 0;13630:0000/2222:0 0 0 1/30 41 54 21/0 0 0 0;13797:000/222:0 0 0/37 33 57/0 0 0;13845:000/222:0 0 0/51 28 36/0 0 0;13860:000/222:0 0 1/49 39 85/0 1 1;13861:000/222:0 0 0/28 43 36/0 0 0;13873:000/222:0 0 0/31 57 21/0 0 0;13875:0000/2222:0 0 0 0/51 43 67 18/0 0 0 0;13911:000/222:0 0 0/36 35 26/0 1 0;13979:000/222:0 0 0/28 59 26/0 0 0;14004:0000/2222:0 0 1 0/36 38 28 27/0 0 0 0;14031:0000/2222:0 0 0 0/66 38 60 59/1 0 0 1;14048:0000/2222:0 0 0 0/48 58 38 38/0 0 0 0;14059:000/222:0 0 0/53 73 53/2 0 0;14061:0000/2222:0 1 0 0/26 36 39 26/0 0 1 0;14066:0000/2222:0 0 0 0/27 30 35 16/0 0 0 0;14100:0000/2222:1 0 0 0/48 41 51 48/0 0 1 0;14126:000/222:0 0 0/38 58 29/0 1 1;14139:000/222:0 0 0/57 77 59/0 2 0;14163:0000/2222:0 0 0 0/36 46 35 62/0 0 0 1;14174:0000/2222:0 0 0 0/52 54 50 60/0 0 1 0;14176:000/222:0 0 0/35 62 104/0 1 0;14210:0000/2222:0 0 0 0/37 32 40 24/0 0 0 1;14215:0000/2222:1 0 0 0/34 66 103 70/0 1 1 0;14226:0000/2222:0 0 0 0/54 32 36 21/1 0 0 0;14258:0000/2222:0 0 0 0/36 30 34 26/0 0 0 0;14264:0000/2222:0 1 0 0/34 47 34 45/0 0 1 1;14267:0000/2222:0 0 0 0/27 55 65 31/0 0 1 0;14287:000/222:0 0 1/70 76 81/0 0 0;14318:000/222:0 0 0/33 92 68/0 0 0;14319:0000/2222:0 0 0 1/35 29 68 58/0 0 1 3;14329:0000/2222:0 0 0 0/32 29 17 20/0 1 0 0;14351:0000/2222:0 0 0 0/70 28 10 13/0 0 0 0;14373:0000/2222:0 0 0 1/29 76 20 51/0 0 0 0;14390:0000/2222:0 1 1 0/33 34 59 33/0 0 1 0;14391:0000/2222:0 0 0 0/109 75 74 150/0 0 0 0;14393:0000/2222:0 0 0 0/62 58 49 46/1 0 0 0;14409:000/222:0 0 0/49 67 51/0 0 0;14416:0000/2222:0 0 0 0/40 52 33 26/0 0 0 0;14473:0000/2222:0 0 0 0/42 30 37 48/0 0 0 0;14534:000/222:0 0 0/59 29 52/0 0 0;14617:0000/2222:0 0 0 0/32 54 65 29/0 0 0 1;14687:0000/2222:0 0 0 0/28 47 53 27/0 0 0 0'

    def test_parse_family_data(self):
        r = parse_family_data(self.FAMILY_DATA)
        self.assertEquals(147, len(r))

    def test_load_toomany_family_data(self):
        df = self.df[self.df.familyData == 'TOOMANY']
        row = df.irow(0)
        
        res = load_toomany_family_data(self.tbf, row)
        self.assertEquals(147, len(res))
        
#     def test_count_all_toomany(self):
#         df = self.df[self.df.familyData == 'TOOMANY']
#         count = 0
#         for i in xrange(len(df)):
#             row = df.irow(i)
#             res = load_toomany_family_data(self.tbf, row)
#             count += len(res)
#         self.assertEqual(67897382, count)
    
if __name__ == "__main__":
    #import sys;sys.argv = ['', 'Test.test_parse_family_data']
    unittest.main()